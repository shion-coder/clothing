{"version":3,"sources":["redux/shop/shop.selectors.js","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.jsx","components/collection/collection.styles.js","components/collection/collection.component.jsx"],"names":["shopSelector","state","shop","selectShopCollections","createSelector","collections","selectShopCollectionsForPreview","Object","values","selectShopCollection","collectionUrlParam","CollectionItemContainer","styled","div","BackgroundImage","imageUrl","CollectionFooterContainer","AddButton","CustomButton","connect","addItem","item","name","price","onClick","inverted","CollectionContainer","CollectionTitle","h2","ItemsContainer","ownProps","collection","match","params","collectionId","title","items","map","key","id"],"mappings":"sGAAA,gFAIMA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAEvBC,EAAwBC,YAAe,CAACJ,IAAe,SAAAE,GAAI,OAAIA,EAAKG,eAIpEC,GAFgCF,YAAe,CAACJ,IAAe,SAAAE,GAAI,QAAMA,EAAKG,eAE5CD,YAAe,CAACD,IAAwB,SAAAE,GAAW,OAChGA,EAAcE,OAAOC,OAAOH,GAAe,OAGhCI,EAAuB,SAAAC,GAAkB,OACpDN,YAAe,CAACD,IAAwB,SAAAE,GAAW,OAAKA,EAAcA,EAAYK,GAAsB,U,wtCCTnG,IAAMC,EAA0BC,UAAOC,IAAV,KA6BvBC,EAAkBF,UAAOC,IAAV,KAMN,gBAAGE,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BJ,UAAOC,IAAV,KAQzBI,EAAYL,kBAAOM,IAAPN,CAAH,KCXPO,gBAAQ,KAAM,CAAEC,aAAhBD,EA1BQ,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMP,EAAoBM,EAApBN,SAAUQ,EAAUF,EAAVE,MAExB,OACE,kBAACZ,EAAD,KACE,kBAACG,EAAD,CAAiBC,SAAUA,IAE3B,kBAACC,EAAD,KACE,8BAAOM,GACP,kCAAQC,IAGV,kBAACN,EAAD,CAAWO,QAAS,kBAAMJ,EAAQC,IAAOI,UAAQ,GAAjD,oB,ghBCvBC,IAAMC,EAAsBd,UAAOC,IAAV,KAKnBc,EAAkBf,UAAOgB,GAAV,KAKfC,EAAiBjB,UAAOC,IAAV,KC0BZM,uBA5BS,SAAClB,EAAO6B,GAAR,MAAsB,CAC5CC,WAAYtB,YAAqBqB,EAASE,MAAMC,OAAOC,aAA3CzB,CAAyDR,MA2BxDkB,EAxBI,SAAC,GAAoB,IAAlBY,EAAiB,EAAjBA,WACpB,IAAKA,EAAY,OAAO,KADa,IAG7BI,EAAiBJ,EAAjBI,MAAOC,EAAUL,EAAVK,MAEf,OACE,kBAACV,EAAD,KACE,kBAACC,EAAD,KAAkBQ,GAElB,kBAACN,EAAD,KACGO,EAAMC,KAAI,SAAAhB,GAAI,OACb,kBAAC,IAAD,CAAgBiB,IAAKjB,EAAKkB,GAAIlB,KAAMA","file":"static/js/4.49056606.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\n/* -------------------------------------------------------------------------- */\n\nconst shopSelector = state => state.shop;\n\nexport const selectShopCollections = createSelector([shopSelector], shop => shop.collections);\n\nexport const selectShopCollectionsIsLoaded = createSelector([shopSelector], shop => !!shop.collections);\n\nexport const selectShopCollectionsForPreview = createSelector([selectShopCollections], collections =>\n  collections ? Object.values(collections) : [],\n);\n\nexport const selectShopCollection = collectionUrlParam =>\n  createSelector([selectShopCollections], collections => (collections ? collections[collectionUrlParam] : null));\n","import styled from 'styled-components';\n\nimport CustomButton from 'components/custom-button/custom-button.component';\n\n/* -------------------------------------------------------------------------- */\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    > div:first-child {\n      opacity: 0.8;\n    }\n\n    button {\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      > div:first-child {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.6;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { addItem } from 'redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  BackgroundImage,\n  CollectionFooterContainer,\n  AddButton,\n} from './collection-item.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, imageUrl, price } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage imageUrl={imageUrl} />\n\n      <CollectionFooterContainer>\n        <span>{name}</span>\n        <span>${price}</span>\n      </CollectionFooterContainer>\n\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add To Cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nCollectionItem.propTypes = {\n  item: PropTypes.object,\n  addItem: PropTypes.func,\n};\n\nexport default connect(null, { addItem })(CollectionItem);\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const CollectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const ItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  > div {\n    margin-bottom: 30px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { selectShopCollection } from 'redux/shop/shop.selectors';\n\nimport CollectionItem from 'components/collection-item/collection-item.component';\n\nimport { CollectionContainer, CollectionTitle, ItemsContainer } from './collection.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectShopCollection(ownProps.match.params.collectionId)(state),\n});\n\nconst Collection = ({ collection }) => {\n  if (!collection) return null;\n\n  const { title, items } = collection;\n\n  return (\n    <CollectionContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n\n      <ItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </ItemsContainer>\n    </CollectionContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nCollection.propTypes = {\n  collection: PropTypes.object,\n};\n\nexport default connect(mapStateToProps)(Collection);\n"],"sourceRoot":""}