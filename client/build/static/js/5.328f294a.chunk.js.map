{"version":3,"sources":["redux/shop/shop.selectors.js","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.js","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.js","components/collections-overview/collections-overview.component.jsx"],"names":["shopSelector","state","shop","selectShopCollections","createSelector","collections","selectShopCollectionsForPreview","Object","values","selectShopCollection","collectionUrlParam","CollectionItemContainer","styled","div","BackgroundImage","imageUrl","CollectionFooterContainer","AddButton","CustomButton","connect","addItem","item","name","price","onClick","inverted","CollectionPreviewContainer","TitleContainer","h1","PreviewContainer","CollectionPreview","title","routeName","items","history","useHistory","push","toUpperCase","filter","index","map","key","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","otherCollectionProps"],"mappings":"sGAAA,gFAIMA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAEvBC,EAAwBC,YAAe,CAACJ,IAAe,SAAAE,GAAI,OAAIA,EAAKG,eAIpEC,GAFgCF,YAAe,CAACJ,IAAe,SAAAE,GAAI,QAAMA,EAAKG,eAE5CD,YAAe,CAACD,IAAwB,SAAAE,GAAW,OAChGA,EAAcE,OAAOC,OAAOH,GAAe,OAGhCI,EAAuB,SAAAC,GAAkB,OACpDN,YAAe,CAACD,IAAwB,SAAAE,GAAW,OAAKA,EAAcA,EAAYK,GAAsB,U,wtCCTnG,IAAMC,EAA0BC,UAAOC,IAAV,KA6BvBC,EAAkBF,UAAOC,IAAV,KAMN,gBAAGE,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BJ,UAAOC,IAAV,KAQzBI,EAAYL,kBAAOM,IAAPN,CAAH,KCXPO,gBAAQ,KAAM,CAAEC,aAAhBD,EA1BQ,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMP,EAAoBM,EAApBN,SAAUQ,EAAUF,EAAVE,MAExB,OACE,kBAACZ,EAAD,KACE,kBAACG,EAAD,CAAiBC,SAAUA,IAE3B,kBAACC,EAAD,KACE,8BAAOM,GACP,kCAAQC,IAGV,kBAACN,EAAD,CAAWO,QAAS,kBAAMJ,EAAQC,IAAOI,UAAQ,GAAjD,oB,sxBCvBC,IAAMC,EAA6Bd,UAAOC,IAAV,KAU1Bc,EAAiBf,UAAOgB,GAAV,KAWdC,EAAmBjB,UAAOC,IAAV,KCYdiB,EA1BW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACvCC,EAAUC,cAEhB,OACE,kBAACT,EAAD,KACE,kBAACC,EAAD,CAAgBH,QAAS,kBAAMU,EAAQE,KAAR,eAAqBJ,MAAeD,EAAMM,eAEzE,kBAACR,EAAD,KACGI,EACEK,QAAO,SAACjB,EAAMkB,GAAP,OAAiBA,EAAQ,KAChCC,KAAI,SAAAnB,GAAI,OACP,kBAAC,IAAD,CAAgBoB,IAAKpB,EAAKqB,GAAIrB,KAAMA,U,oHClBzC,IAAMsB,EAA+B/B,UAAOC,IAAV,KCSnC+B,EAAkBC,YAAyB,CAC/CxC,YAAaC,MAmBAa,sBAAQyB,EAARzB,EAhBa,SAAC,GAAqB,IAAnBd,EAAkB,EAAlBA,YAC7B,OACE,kBAACsC,EAAD,KACGtC,EAAYmC,KAAI,gBAAGE,EAAH,EAAGA,GAAOI,EAAV,6BACf,kBAAC,EAAD,eAAmBL,IAAKC,GAAQI","file":"static/js/5.328f294a.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\n/* -------------------------------------------------------------------------- */\n\nconst shopSelector = state => state.shop;\n\nexport const selectShopCollections = createSelector([shopSelector], shop => shop.collections);\n\nexport const selectShopCollectionsIsLoaded = createSelector([shopSelector], shop => !!shop.collections);\n\nexport const selectShopCollectionsForPreview = createSelector([selectShopCollections], collections =>\n  collections ? Object.values(collections) : [],\n);\n\nexport const selectShopCollection = collectionUrlParam =>\n  createSelector([selectShopCollections], collections => (collections ? collections[collectionUrlParam] : null));\n","import styled from 'styled-components';\n\nimport CustomButton from 'components/custom-button/custom-button.component';\n\n/* -------------------------------------------------------------------------- */\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    > div:first-child {\n      opacity: 0.8;\n    }\n\n    button {\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      > div:first-child {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.6;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { addItem } from 'redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  BackgroundImage,\n  CollectionFooterContainer,\n  AddButton,\n} from './collection-item.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, imageUrl, price } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage imageUrl={imageUrl} />\n\n      <CollectionFooterContainer>\n        <span>{name}</span>\n        <span>${price}</span>\n      </CollectionFooterContainer>\n\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add To Cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nCollectionItem.propTypes = {\n  item: PropTypes.object,\n  addItem: PropTypes.func,\n};\n\nexport default connect(null, { addItem })(CollectionItem);\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  letter-spacing: 4px;\n  margin-bottom: 25px;\n  cursor: pointer;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useHistory } from 'react-router-dom';\n\nimport CollectionItem from 'components/collection-item/collection-item.component';\n\nimport { CollectionPreviewContainer, TitleContainer, PreviewContainer } from './collection-preview.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst CollectionPreview = ({ title, routeName, items }) => {\n  const history = useHistory();\n\n  return (\n    <CollectionPreviewContainer>\n      <TitleContainer onClick={() => history.push(`shop/${routeName}`)}>{title.toUpperCase()}</TitleContainer>\n\n      <PreviewContainer>\n        {items\n          .filter((item, index) => index < 4)\n          .map(item => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n      </PreviewContainer>\n    </CollectionPreviewContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nCollectionPreview.propTypes = {\n  title: PropTypes.string,\n  routeName: PropTypes.string,\n  items: PropTypes.array,\n};\n\nexport default CollectionPreview;\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectShopCollectionsForPreview } from 'redux/shop/shop.selectors';\n\nimport CollectionPreview from 'components/collection-preview/collection-preview.component';\n\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectShopCollectionsForPreview,\n});\n\nconst CollectionsOverview = ({ collections }) => {\n  return (\n    <CollectionsOverviewContainer>\n      {collections.map(({ id, ...otherCollectionProps }) => (\n        <CollectionPreview key={id} {...otherCollectionProps} />\n      ))}\n    </CollectionsOverviewContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nCollectionsOverview.propTypes = {\n  collections: PropTypes.array,\n};\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n"],"sourceRoot":""}