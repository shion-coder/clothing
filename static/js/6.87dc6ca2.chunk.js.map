{"version":3,"sources":["components/checkout-item/checkout-item.styles.js","components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.styles.js","pages/checkout/checkout.page.jsx"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","Arrow","RemoveButtonContainer","connect","removeItem","subtractItem","addItem","cartItem","name","imageUrl","price","quantity","src","alt","onClick","StripeButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","JSON","parse","stripeKey","CheckOutContainer","CheckOutHeaderContainer","HeaderBlockContainer","TotalContainer","TestWarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","totalPrice","selectCartItemsTotalPrice","map","column","index","key","id"],"mappings":"mgCAIO,IAAMA,EAAwBC,UAAOC,IAAV,KAUrBC,EAAiBF,UAAOC,IAAV,KAUdE,EAAgBH,UAAOI,KAAV,KAIbC,EAAoBL,kBAAOG,EAAPH,CAAH,KAUjBM,EAAQN,UAAOC,IAAV,KAILM,EAAwBP,UAAOC,IAAV,KCQnBO,cAAQ,KAAM,CAAEC,eAAYC,iBAAcC,aAA1CH,EAjCM,SAAC,GAAqD,IAAnDI,EAAkD,EAAlDA,SAAUH,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAClDE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAE/B,OACE,kBAACjB,EAAD,KACE,kBAACG,EAAD,KACE,yBAAKe,IAAKH,EAAUI,IAAI,UAG1B,kBAACf,EAAD,KAAgBU,GAEhB,kBAACR,EAAD,KACE,kBAACC,EAAD,CAAOa,QAAS,kBAAMT,EAAaE,KAAnC,UACA,8BAAOI,GACP,kBAACV,EAAD,CAAOa,QAAS,kBAAMR,EAAQC,KAA9B,WAGF,kBAACT,EAAD,SAAiBY,GAEjB,kBAACR,EAAD,CAAuBY,QAAS,kBAAMV,EAAWG,KAAjD,c,oCCYSQ,EAxCM,SAAC,GAAe,IAAbL,EAAY,EAAZA,MAChBM,EAAyB,IAARN,EAqBvB,OACE,kBAAC,IAAD,CACEO,MAAM,UACNT,KAAK,WACLU,gBAAc,EACdC,iBAAe,EACfC,MAAM,sCACNC,YAAW,yBAAoBX,GAC/BY,OAAQN,EACRO,WAAW,UACXC,MA5BY,SAAAA,GACdC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQN,EACRQ,WAGDK,MAAK,SAAAC,GACJC,MAAM,0BAEPC,OAAM,SAAAC,GACLC,QAAQC,IAAR,yBAA8BC,KAAKC,MAAMJ,KACzCF,MAAM,2FAeRO,UA/BmB,gD,04BCNlB,IAAMC,EAAoB5C,UAAOC,IAAV,KAcjB4C,EAA0B7C,UAAOC,IAAV,KAQvB6C,EAAuB9C,UAAOC,IAAV,KASpB8C,EAAiB/C,UAAOC,IAAV,KAMd+C,EAAuBhD,UAAOC,IAAV,KCrB3BgD,EAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,WAAYC,MA0CC9C,sBAAQyC,EAARzC,EAvCE,SAAC,GAA+B,IAA7B2C,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,WAG7B,OACE,kBAACT,EAAD,KACE,kBAACC,EAAD,KAJY,CAAC,UAAW,cAAe,UAAW,QAAS,UAKhDU,KAAI,SAACC,EAAQC,GAAT,OACX,kBAACX,EAAD,CAAsBY,IAAKD,GACzB,8BAAOD,QAKZL,EAAUI,KAAI,SAAA3C,GAAQ,OACrB,kBAAC,EAAD,CAAc8C,IAAK9C,EAAS+C,GAAI/C,SAAUA,OAG5C,kBAACmC,EAAD,KACE,yCAAeM,IAGjB,kBAACL,EAAD,kEAEE,6BAFF,+CAMA,kBAAC,EAAD,CAAcjC,MAAOsC","file":"static/js/6.87dc6ca2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n\n  span {\n    margin: 0 10px;\n    position: relative;\n    top: 2px;\n  }\n`;\n\nexport const Arrow = styled.div`\n  cursor: pointer;\n`;\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 22px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { removeItem, subtractItem, addItem } from 'redux/cart/cart.actions';\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  Arrow,\n  RemoveButtonContainer,\n} from './checkout-item.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst CheckoutItem = ({ cartItem, removeItem, subtractItem, addItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt=\"item\" />\n      </ImageContainer>\n\n      <TextContainer>{name}</TextContainer>\n\n      <QuantityContainer>\n        <Arrow onClick={() => subtractItem(cartItem)}>&#10094;</Arrow>\n        <span>{quantity}</span>\n        <Arrow onClick={() => addItem(cartItem)}>&#10095;</Arrow>\n      </QuantityContainer>\n\n      <TextContainer>${price}</TextContainer>\n\n      <RemoveButtonContainer onClick={() => removeItem(cartItem)}>&#10005;</RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nCheckoutItem.propTypes = {\n  cartItem: PropTypes.object,\n  removeItem: PropTypes.func,\n  subtractItem: PropTypes.func,\n  addItem: PropTypes.func,\n};\n\nexport default connect(null, { removeItem, subtractItem, addItem })(CheckoutItem);\n","import React from 'react';\n\nimport axios from 'axios';\n\nimport StripeCheckout from 'react-stripe-checkout';\n\n/* -------------------------------------------------------------------------- */\n\nconst StripeButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_IwNACIrw0YrKeSOphyRl1Eco00iTKKNPUN';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token,\n      },\n    })\n      .then(response => {\n        alert('Payment successfull');\n      })\n      .catch(error => {\n        console.log(`Payment error: ${JSON.parse(error)}`);\n        alert('There was an issue with your payment. Please sure you use the provided credit card.');\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"Clothing\"\n      billingAddress\n      shippingAddress\n      image=\"https://sendeyo.com/up/d/f3eb2117da\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nexport default StripeButton;\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const CheckOutContainer = styled.div`\n  width: 65%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  button {\n    margin-left: auto;\n    margin-top: 40px;\n  }\n`;\n\nexport const CheckOutHeaderContainer = styled.div`\n  width: 100%;\n  padding: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n\nexport const TestWarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 14px;\n  color: red;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems, selectCartItemsTotalPrice } from 'redux/cart/cart.selectors';\n\nimport CheckoutItem from 'components/checkout-item/checkout-item.component';\nimport StripeButton from 'components/stripe-button/stripe-button.component';\n\nimport {\n  CheckOutContainer,\n  CheckOutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  TestWarningContainer,\n} from './checkout.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  totalPrice: selectCartItemsTotalPrice,\n});\n\nconst CheckOut = ({ cartItems, totalPrice }) => {\n  const columns = ['Product', 'Description', 'Quantiy', 'Price', 'Remove'];\n\n  return (\n    <CheckOutContainer>\n      <CheckOutHeaderContainer>\n        {columns.map((column, index) => (\n          <HeaderBlockContainer key={index}>\n            <span>{column}</span>\n          </HeaderBlockContainer>\n        ))}\n      </CheckOutHeaderContainer>\n\n      {cartItems.map(cartItem => (\n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n      ))}\n\n      <TotalContainer>\n        <span>TOTAL: ${totalPrice}</span>\n      </TotalContainer>\n\n      <TestWarningContainer>\n        * Please use the following test credit card for payments *\n        <br />\n        4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n      </TestWarningContainer>\n\n      <StripeButton price={totalPrice} />\n    </CheckOutContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nCheckOut.propTypes = {\n  cartItems: PropTypes.array,\n  totalPrice: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(CheckOut);\n"],"sourceRoot":""}